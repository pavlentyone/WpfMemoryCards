// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WpfMemoryCards;

namespace WpfMemoryCards.Migrations
{
    [DbContext(typeof(MySqlDbContext))]
    partial class MySqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WpfMemoryCards.Card", b =>
                {
                    b.Property<uint?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int unsigned");

                    b.Property<DateTime?>("Absorbed")
                        .HasColumnName("absorbed")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnName("deleted")
                        .HasColumnType("DateTime");

                    b.Property<string>("Hint1")
                        .HasColumnName("hint1")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("Hint2")
                        .HasColumnName("hint2")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<uint?>("Picture1Id")
                        .HasColumnName("pic1_id")
                        .HasColumnType("int unsigned");

                    b.Property<uint?>("Picture2Id")
                        .HasColumnName("pic2_id")
                        .HasColumnType("int unsigned");

                    b.Property<uint?>("TagId")
                        .HasColumnName("tag_id")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Text1")
                        .IsRequired()
                        .HasColumnName("text1")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<string>("Text2")
                        .HasColumnName("text2")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("Picture1Id");

                    b.HasIndex("Picture2Id");

                    b.HasIndex("TagId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("WpfMemoryCards.Picture", b =>
                {
                    b.Property<uint?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnName("value")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("WpfMemoryCards.Tag", b =>
                {
                    b.Property<uint?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnName("value")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("WpfMemoryCards.Card", b =>
                {
                    b.HasOne("WpfMemoryCards.Picture", "Picture1")
                        .WithMany()
                        .HasForeignKey("Picture1Id");

                    b.HasOne("WpfMemoryCards.Picture", "Picture2")
                        .WithMany()
                        .HasForeignKey("Picture2Id");

                    b.HasOne("WpfMemoryCards.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");
                });
#pragma warning restore 612, 618
        }
    }
}
